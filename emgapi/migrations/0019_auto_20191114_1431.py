# -*- coding: utf-8 -*-
# Generated by Django 1.11.24 on 2019-11-14 14:31
from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.deletion


antismash_description = ('Genome GFF file with antiSMASH geneclusters annotations', 'Genome antiSMASH Annotation')

def add_antismash_file_download_descriptions(apps, schema_editor):
    db_name = schema_editor.connection.alias
    model = apps.get_model('emgapi', 'DownloadDescriptionLabel')
    model.objects.using(db_name).create(
        description=antismash_description[0],
        description_label=antismash_description[1])

def remove_antismash_file_download_descriptions(apps, schema_editor):
    db_name = schema_editor.connection.alias
    model = apps.get_model('emgapi', 'DownloadDescriptionLabel')
    model.objects.using(db_name).filter(
        description=antismash_description[0],
        description_label=antismash_description[1]).delete()


class Migration(migrations.Migration):

    dependencies = [
        ('emgapi', '0018_auto_20191105_1052'),
    ]

    operations = [
        migrations.CreateModel(
            name='AntiSmashGC',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(db_column='NAME', max_length=80)),
                ('description', models.CharField(db_column='DESCRIPTION', max_length=80)),
            ],
            options={
                'db_table': 'ANTISMASH_GENECLUSTER',
            },
        ),
        migrations.CreateModel(
            name='GenomeAntiSmashGCCounts',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('genome_count', models.IntegerField(db_column='GENOME_COUNT')),
                ('antismash_genecluster', models.ForeignKey(db_column='ANTISMASH_GENECLUSTER', on_delete=django.db.models.deletion.DO_NOTHING, to='emgapi.AntiSmashGC')),
                ('genome', models.ForeignKey(db_column='GENOME_ID', on_delete=django.db.models.deletion.CASCADE, to='emgapi.Genome')),
            ],
            options={
                'db_table': 'GENOME_ANTISMASH_GENECLUSTER_COUNTS',
            },
        ),
        migrations.AddField(
            model_name='genome',
            name='antismash_geneclusters',
            field=models.ManyToManyField(through='emgapi.GenomeAntiSmashGCCounts', to='emgapi.AntiSmashGC'),
        ),
        migrations.AlterUniqueTogether(
            name='genomeantismashgccounts',
            unique_together=set([('genome', 'antismash_genecluster')]),
        ),
        migrations.RunPython(add_antismash_file_download_descriptions,
                             reverse_code=remove_antismash_file_download_descriptions),
    ]
